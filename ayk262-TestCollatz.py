#!/usr/bin/env python3

# -------------------------------
# projects/collatz/TestCollatz.py
# Copyright (C) 2016
# Glenn P. Downing
# -------------------------------

# https://docs.python.org/3.4/reference/simple_stmts.html#grammar-token-assert_stmt

# -------
# imports
# -------

from io import StringIO
from unittest import main, TestCase

from Collatz import collatz_setup, collatz_read, collatz_eval, collatz_print, collatz_solve

# -----------
# TestCollatz
# -----------


class TestCollatz (TestCase):
    # ----
    # setup
    # ----

    def test_setup_1(self):
        d = {'990001-1000000': 440, '220001-230000': 368, '470001-480000': 382, '910001-920000': 476, '870001-880000': 432, '460001-470000': 444, '550001-560000': 421, '920001-930000': 476, '230001-240000': 443, '750001-760000': 424, '860001-870000': 388, '950001-960000': 414, '540001-550000': 452, '760001-770000': 468, '190001-200000': 360, '590001-600000': 403, '610001-620000': 447, '50001-60000': 340, '890001-900000': 370, '800001-810000': 406, '580001-590000': 434, '260001-270000': 407, '880001-890000': 445, '670001-680000': 385, '900001-910000': 445, '560001-570000': 421, '20001-30000': 308, '830001-840000': 525, '940001-950000': 383, '480001-490000': 413, '150001-160000': 383, '970001-980000': 458, '500001-510000': 426, '410001-420000': 449, '620001-630000': 509, '310001-320000': 384, '350001-360000': 379, '320001-330000': 384, '210001-220000': 386, '100001-110000': 354, '720001-730000': 411, '730001-740000': 424, '530001-540000': 377, '300001-310000': 371, '290001-300000': 371, '740001-750000': 393, '110001-120000': 349, '850001-860000': 419, '680001-690000': 398, '930001-940000': 507, '510001-520000': 470, '840001-850000': 419, '520001-530000': 408, '330001-340000': 366, '650001-660000': 429, '140001-150000': 375, '780001-790000': 406, '360001-370000': 410, '570001-580000': 390, '70001-80000': 351, '790001-800000': 468, '980001-990000': 427, '960001-970000': 414, '770001-780000': 437, '600001-610000': 403, '400001-410000': 405, '810001-820000': 450, '820001-830000': 450, '180001-190000': 365, '10001-20000': 279, '420001-430000': 418, '640001-650000': 416, '700001-710000': 504, '120001-130000': 344, '170001-180000': 347, '270001-280000': 407, '430001-440000': 400, '80001-90000': 333, '40001-50000': 314, '440001-450000': 369, '370001-380000': 423, '340001-350000': 441, '200001-210000': 373, '390001-400000': 405, '90001-100000': 333, '660001-670000': 442, '130001-140000': 344, '710001-720000': 411, '380001-390000': 436, '450001-460000': 387, '690001-700000': 442, '30001-40000': 324, '1-10000': 262, '280001-290000': 389, '630001-640000': 416, '490001-500000': 426, '250001-260000': 363, '160001-170000': 370, '60001-70000': 335, '240001-250000': 368}
        v = collatz_setup(432432, 765765, d)
        self.assertEqual(v, 509)

    def test_setup_2(self):
        d = {'990001-1000000': 440, '220001-230000': 368, '470001-480000': 382, '910001-920000': 476, '870001-880000': 432, '460001-470000': 444, '550001-560000': 421, '920001-930000': 476, '230001-240000': 443, '750001-760000': 424, '860001-870000': 388, '950001-960000': 414, '540001-550000': 452, '760001-770000': 468, '190001-200000': 360, '590001-600000': 403, '610001-620000': 447, '50001-60000': 340, '890001-900000': 370, '800001-810000': 406, '580001-590000': 434, '260001-270000': 407, '880001-890000': 445, '670001-680000': 385, '900001-910000': 445, '560001-570000': 421, '20001-30000': 308, '830001-840000': 525, '940001-950000': 383, '480001-490000': 413, '150001-160000': 383, '970001-980000': 458, '500001-510000': 426, '410001-420000': 449, '620001-630000': 509, '310001-320000': 384, '350001-360000': 379, '320001-330000': 384, '210001-220000': 386, '100001-110000': 354, '720001-730000': 411, '730001-740000': 424, '530001-540000': 377, '300001-310000': 371, '290001-300000': 371, '740001-750000': 393, '110001-120000': 349, '850001-860000': 419, '680001-690000': 398, '930001-940000': 507, '510001-520000': 470, '840001-850000': 419, '520001-530000': 408, '330001-340000': 366, '650001-660000': 429, '140001-150000': 375, '780001-790000': 406, '360001-370000': 410, '570001-580000': 390, '70001-80000': 351, '790001-800000': 468, '980001-990000': 427, '960001-970000': 414, '770001-780000': 437, '600001-610000': 403, '400001-410000': 405, '810001-820000': 450, '820001-830000': 450, '180001-190000': 365, '10001-20000': 279, '420001-430000': 418, '640001-650000': 416, '700001-710000': 504, '120001-130000': 344, '170001-180000': 347, '270001-280000': 407, '430001-440000': 400, '80001-90000': 333, '40001-50000': 314, '440001-450000': 369, '370001-380000': 423, '340001-350000': 441, '200001-210000': 373, '390001-400000': 405, '90001-100000': 333, '660001-670000': 442, '130001-140000': 344, '710001-720000': 411, '380001-390000': 436, '450001-460000': 387, '690001-700000': 442, '30001-40000': 324, '1-10000': 262, '280001-290000': 389, '630001-640000': 416, '490001-500000': 426, '250001-260000': 363, '160001-170000': 370, '60001-70000': 335, '240001-250000': 368}
        v = collatz_setup(1, 999999, d)
        self.assertEqual(v, 525)

    def test_setup_3(self):
        d = {'990001-1000000': 440, '220001-230000': 368, '470001-480000': 382, '910001-920000': 476, '870001-880000': 432, '460001-470000': 444, '550001-560000': 421, '920001-930000': 476, '230001-240000': 443, '750001-760000': 424, '860001-870000': 388, '950001-960000': 414, '540001-550000': 452, '760001-770000': 468, '190001-200000': 360, '590001-600000': 403, '610001-620000': 447, '50001-60000': 340, '890001-900000': 370, '800001-810000': 406, '580001-590000': 434, '260001-270000': 407, '880001-890000': 445, '670001-680000': 385, '900001-910000': 445, '560001-570000': 421, '20001-30000': 308, '830001-840000': 525, '940001-950000': 383, '480001-490000': 413, '150001-160000': 383, '970001-980000': 458, '500001-510000': 426, '410001-420000': 449, '620001-630000': 509, '310001-320000': 384, '350001-360000': 379, '320001-330000': 384, '210001-220000': 386, '100001-110000': 354, '720001-730000': 411, '730001-740000': 424, '530001-540000': 377, '300001-310000': 371, '290001-300000': 371, '740001-750000': 393, '110001-120000': 349, '850001-860000': 419, '680001-690000': 398, '930001-940000': 507, '510001-520000': 470, '840001-850000': 419, '520001-530000': 408, '330001-340000': 366, '650001-660000': 429, '140001-150000': 375, '780001-790000': 406, '360001-370000': 410, '570001-580000': 390, '70001-80000': 351, '790001-800000': 468, '980001-990000': 427, '960001-970000': 414, '770001-780000': 437, '600001-610000': 403, '400001-410000': 405, '810001-820000': 450, '820001-830000': 450, '180001-190000': 365, '10001-20000': 279, '420001-430000': 418, '640001-650000': 416, '700001-710000': 504, '120001-130000': 344, '170001-180000': 347, '270001-280000': 407, '430001-440000': 400, '80001-90000': 333, '40001-50000': 314, '440001-450000': 369, '370001-380000': 423, '340001-350000': 441, '200001-210000': 373, '390001-400000': 405, '90001-100000': 333, '660001-670000': 442, '130001-140000': 344, '710001-720000': 411, '380001-390000': 436, '450001-460000': 387, '690001-700000': 442, '30001-40000': 324, '1-10000': 262, '280001-290000': 389, '630001-640000': 416, '490001-500000': 426, '250001-260000': 363, '160001-170000': 370, '60001-70000': 335, '240001-250000': 368}
        v = collatz_setup(99999, 567532, d)
        self.assertEqual(v, 470)


    # ----
    # read
    # ----

    def test_read_1(self):
        s = "1 10\n"
        i, j = collatz_read(s)
        self.assertEqual(i,  1)
        self.assertEqual(j, 10)

    def test_read_2(self):
        s = "111111 222222\n"
        i, j = collatz_read(s)
        self.assertEqual(i, 111111)
        self.assertEqual(j, 222222)

    def test_read_3(self):
        s = "34 99988\n"
        i, j = collatz_read(s)
        self.assertEqual(i, 34)
        self.assertEqual(j, 99988)



    # ----
    # eval
    # ----

    def test_eval_1(self):
        v = collatz_eval(1, 10)
        self.assertEqual(v, 20)

    def test_eval_2(self):
        v = collatz_eval(100, 200)
        self.assertEqual(v, 125)

    def test_eval_3(self):
        v = collatz_eval(201, 210)
        self.assertEqual(v, 89)

    def test_eval_4(self):
        v = collatz_eval(900, 1000)
        self.assertEqual(v, 174)

    # -----
    # print
    # -----

    def test_print_1(self):
        w = StringIO()
        collatz_print(w, 1, 10, 20)
        self.assertEqual(w.getvalue(), "1 10 20\n")

    def test_print_2(self):
        w = StringIO()
        collatz_print(w, 111111, 222222, 386)
        self.assertEqual(w.getvalue(), "111111 222222 386\n")

    def test_print_3(self):
        w = StringIO()
        collatz_print(w, 34, 99988, 351)
        self.assertEqual(w.getvalue(), "34 99988 351\n")

    # -----
    # solve
    # -----

    def test_solve_1(self):
        r = StringIO("543 32534\n389 3789\n7328 9878\n1 2\n")
        w = StringIO()
        collatz_solve(r, w)
        self.assertEqual(
            w.getvalue(), "543 32534 308\n389 3789 238\n7328 9878 260\n1 2 2\n")

    def test_solve_2(self):
        r = StringIO("132 654\n8947 84930\n3677 47832\n2566 56889\n")
        w = StringIO()
        collatz_solve(r, w)
        self.assertEqual(
            w.getvalue(), "132 654 145\n8947 84930 351\n3677 47832 324\n2566 56889 340\n")

    def test_solve_3(self):
        r = StringIO("213129 879799\n324 6546\n773892 983798\n3 4\n")
        w = StringIO()
        collatz_solve(r, w)
        self.assertEqual(
            w.getvalue(), "213129 879799 525\n324 6546 262\n773892 983798 525\n3 4 8\n")

# ----
# main
# ----

if __name__ == "__main__":
    main()

""" #pragma: no cover
% coverage-3.5 run --branch TestCollatz.py >  TestCollatz.out 2>&1


% cat TestCollatz.out
.......
----------------------------------------------------------------------
Ran 7 tests in 0.000s
OK


% coverage-3.5 report -m                   >> TestCollatz.out



% cat TestCollatz.out
.......
----------------------------------------------------------------------
Ran 7 tests in 0.000s
OK
Name             Stmts   Miss Branch BrPart  Cover   Missing
------------------------------------------------------------
Collatz.py          12      0      2      0   100%
TestCollatz.py      32      0      0      0   100%
------------------------------------------------------------
TOTAL               44      0      2      0   100%
"""
